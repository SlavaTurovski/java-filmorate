CREATE TABLE IF NOT EXISTS users ( --таблица пользователей
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  login VARCHAR(255) NOT NULL UNIQUE,
  name VARCHAR(255) NOT NULL,
  birthday DATE NOT NULL
  );

CREATE TABLE IF NOT EXISTS friendship ( --таблица дружбы пользователей
  following_user_id INTEGER, --пользователь
  followed_user_id INTEGER, --друг пользователя
  friendship_status_id INTEGER,
  FOREIGN KEY (following_user_id) REFERENCES users(id),
  FOREIGN KEY (followed_user_id) REFERENCES users(id)
  );

CREATE TABLE IF NOT EXISTS mpa ( --таблица возрастных рейтингов
  mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL
  );

CREATE TABLE IF NOT EXISTS films ( --таблица фильмов
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  release_date TIMESTAMP,
  duration INTEGER,
  mpa_id INTEGER,
  FOREIGN KEY (mpa_id) REFERENCES mpa(mpa_id)
  );

CREATE TABLE IF NOT EXISTS genre ( --таблица жанров
  genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL
  );

CREATE TABLE IF NOT EXISTS film_genre ( --таблица фильмов и их принадлежности к жанру
  film_id INTEGER,
  genre_id INTEGER,
  FOREIGN KEY (film_id) REFERENCES films(id),
  FOREIGN KEY (genre_id) REFERENCES genre(genre_id)
  );

  CREATE TABLE IF NOT EXISTS film_likes ( --таблица лайков фильмов
      film_id INTEGER REFERENCES films(id) ON DELETE CASCADE,
      user_id INTEGER REFERENCES users(id)
  );